/*!
 * gamepad.js v0.0.3-alpha
 * https://github.com/neogeek/gamepad.js
 *
 * Copyright (c) 2014 Scott Doxey
 * Released under the MIT license
 */

(function(){"use strict";function e(){this._listeners=[];this._activeKeys=[];this._activeInputs={gamepad:[],keyboard:[]};this._keyMapping={gamepad:{standard:{button_1:0,button_2:1,button_3:2,button_4:3,shoulder_top_left:4,shoulder_top_right:5,shoulder_bottom_left:6,shoulder_bottom_right:7,select:8,start:9,stick_button_left:10,stick_button_right:11,d_pad_up:12,d_pad_down:13,d_pad_left:14,d_pad_right:15,vendor:16}},keyboard:{button_1:32,start:27,d_pad_up:38,d_pad_down:40,d_pad_left:37,d_pad_right:39}};document.addEventListener("keydown",this._handleEventListener.bind(this));document.addEventListener("keyup",this._handleEventListener.bind(this));window.requestAnimationFrame(this._loop.bind(this))}e.prototype._handleGamepad=function(e,t){var n=this,i=n._keyMapping.gamepad[e.mapping];if(n._activeInputs.gamepad[t]===undefined){n._activeInputs.gamepad[t]={}}this._listeners.forEach(function(o){var d=e.buttons[i[o.button]];if(!d.pressed||n._activeInputs.gamepad[t][i[o.button]]===undefined){n._activeInputs.gamepad[t][i[o.button]]={}}else{n._handleListener(o,n._activeInputs.gamepad[t][i[o.button]],{button:o.button,player:t,event:d})}})};e.prototype._handleKeyboard=function(){var e=this,t=e._keyMapping.keyboard;this._listeners.forEach(function(n){var i=t[n.button];if(e._activeKeys.indexOf(i)===-1||e._activeInputs.keyboard[i]===undefined){e._activeInputs.keyboard[i]={}}else{e._handleListener(n,e._activeInputs.keyboard[i],{button:n.button,player:"keyboard",event:{keyCode:i}})}})};e.prototype._handleEventListener=function(e){if(e.type==="keydown"&&this._activeKeys.indexOf(e.keyCode)===-1){this._activeKeys.push(e.keyCode)}else if(e.type==="keyup"&&this._activeKeys.indexOf(e.keyCode)!==-1){this._activeKeys.splice(this._activeKeys.indexOf(e.keyCode),1)}};e.prototype._handleListener=function(e,t,n){if(t.delay){t.delay=t.delay-1;return false}else if(e.options.delay){t.delay=e.options.delay}if(t.triggered&&e.options.once){return false}t.triggered=true;e.callback.call(this,n)};e.prototype._loop=function(){Array.prototype.slice.call(window.navigator.getGamepads()).forEach(this._handleGamepad.bind(this));this._handleKeyboard();window.requestAnimationFrame(this._loop.bind(this))};e.prototype.on=function(e,t,n){if(typeof t==="function"&&n===undefined){n=t;t={}}this._listeners.push({button:e,options:t,callback:n})};e.prototype.off=function(e){var t=this;t._listeners.forEach(function(n){if(n.button===e){t._listeners.splice(t._listeners.indexOf(n),1)}})};e.prototype.setCustomMapping=function(e,t){if(this._keyMapping[e]!==undefined){this._keyMapping[e]=t}else{throw new Error('The device "'+e+'" is not supported through gamepad.js')}};if(typeof define==="function"&&define.amd!==undefined){define([],e)}else if(typeof module==="object"&&module.exports!==undefined){module.exports=e}else{window.Gamepad=e}})();
